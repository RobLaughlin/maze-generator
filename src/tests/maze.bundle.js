!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t);var r=class{constructor(e,t){this.row=e,this.column=t}};class o{constructor(e=!0){this.enabled=e}toggle(e){this.enabled=e}}class i{constructor(e=!0,t=!0,n=!0,r=!0){this.left=new o(e),this.up=new o(t),this.right=new o(n),this.down=new o(r)}toggleWall(e,t){switch(e){case"LEFT":this.left.toggle(t);break;case"UP":this.up.toggle(t);break;case"RIGHT":this.right.toggle(t);break;case"DOWN":this.down.toggle(t)}}toggleOpposite(e,t){switch(e){case"LEFT":this.right.toggle(t);break;case"UP":this.down.toggle(t);break;case"RIGHT":this.left.toggle(t);break;case"DOWN":this.up.toggle(t)}}setWalls(e){this.left.toggle(e),this.up.toggle(e),this.right.toggle(e),this.down.toggle(e)}}i.WALLS={LEFT:"LEFT",UP:"UP",RIGHT:"RIGHT",DOWN:"DOWN"};var s=i;var l=class extends s{constructor(e,t=!1){super(),this.index=e,this.visited=t}getNeighborIndices(){return new Map([["LEFT",new r(this.index.row-1,this.index.column)],["RIGHT",new r(this.index.row+1,this.index.column)],["UP",new r(this.index.row,this.index.column+1)],["DOWN",new r(this.index.row,this.index.column-1)]])}};var a=class{constructor(e,t){this.rows=e,this.columns=t,this.cells=Array.from({length:e},(e,n)=>Array.from({length:t},(e,t)=>new l(new r(n,t)))),this.generated=[]}validCellIndex(e){return e.row<this.rows&&e.column<this.columns&&e.row>=0&&e.column>=0}getUnvisitedCells(e){let t=[];return e.forEach((e,n)=>{if(this.validCellIndex(e)){let r=this.cells[e.row][e.column];r.visited||t.push([r,n])}}),t}generate(e,t){let n=new r(e,t);if(!this.validCellIndex(n))throw RangeError("Starting index out of range.");this.generated=[];let o=[],i=this.cells[n.row][n.column];for(i.visited=!0,i.setWalls(!1),o.push(i);o.length>0;){let e=o.pop(),t=this.getUnvisitedCells(e.getNeighborIndices());if(t.length>0){let n=Math.floor(Math.random()*t.length),r=t[n][0],i=t[n][1];e.toggleWall(i,!1),r.toggleOpposite(i,!1),o.push(e),r.visited=!0,o.push(r),this.generated.push(r)}}return this.generated}};try{window.Maze=a}catch(e){console.log("There was an error attaching the Maze module to window.")}}]);